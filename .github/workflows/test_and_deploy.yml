name: Test and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
   inputs:
      commit:
        description: 'Commit hash to deploy'
        required: false
        default: ${{ github.sha }}

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    if: github.event_name != 'workflow_dispatch'
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: cargo test

  deploy:
    if: github.event_name == 'workflow_dispatch'
    name: Deploy to Server
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: SSH into Server and Deploy
        env:
          DEPLOY_COMMIT: ${{ github.event.inputs.commit }}
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PATH: ${{ secrets.SSH_PATH }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USER@$SSH_HOST <<EOF
            set -e  # Exit immediately if a command fails
            cd $SSH_PATH && \
            git fetch origin && \
            git reset --hard "$DEPLOY_COMMIT" && \
            docker build -t factorion-bot . && \
            docker stop factorion-bot || true && \
            sleep 3 && \
            docker rm factorion-bot || true && \
            sleep 1 && \
            docker run -d \
              --network service-network \
              --name factorion-bot \
              --volume $SSH_PATH:/usr/factorion \
              factorion-bot:latest ./run.sh && \
            sleep 3 && \
            if [ \$(docker ps -q -f name=factorion-bot | wc -l) -eq 0 ]; then
              echo "ERROR: Container failed to start. Showing logs:" && \
              docker logs factorion-bot && \
              exit 1
            fi && \
            echo "Deployment successful - container is running"
          EOF
          
          if [ $? -ne 0 ]; then
            echo "Deployment failed"
            exit 1
          fi
          
          rm -f private_key.pem
